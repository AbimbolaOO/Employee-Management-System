version: '3.8'

services:
  postgres-auth:
    container_name: ems-auth
    image: postgres
    environment:
      POSTGRES_USER: ems-auth
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-auth:/data/postgres
    ports:
      - '5452:5432'
    networks:
      - microservices-net
    restart: unless-stopped

  postgres-emp:
    container_name: ems-emp
    image: postgres
    environment:
      POSTGRES_USER: ems-emp
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-emp:/data/postgres
    ports:
      - '5451:5432'
    networks:
      - microservices-net
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - '9411:9411'
    networks:
      - microservices-net

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: ['redis-server', '--appendonly', 'yes']
    networks:
      - microservices-net

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq_container
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - microservices-net

  config-server:
    container_name: config-server
    platform: linux/amd64
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - '8888:8888'
    networks:
      - microservices-net

  discovery-server:
    container_name: discovery-server
    platform: linux/amd64
    build:
      context: ./discovery
      dockerfile: Dockerfile
    ports:
      - '8761:8761'
    depends_on:
      - config-server
    networks:
      - microservices-net

  notification-service:
    container_name: notification-service
    platform: linux/amd64
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - '8092:8092'
    depends_on:
      - discovery-server
      - config-server
      - postgres-emp
      - postgres-auth
      - redis
      - rabbitmq
    networks:
      - microservices-net

  auth-service:
    container_name: auth-service
    platform: linux/amd64
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - '8091:8091'
    depends_on:
      - discovery-server
      - config-server
      - notification-service
      - postgres-emp
      - postgres-auth
      - redis
      - rabbitmq
    networks:
      - microservices-net

  employee-service:
    container_name: employee-service
    platform: linux/amd64
    build:
      context: ./employee-service
      dockerfile: Dockerfile
    ports:
      - '8090:8090'
    depends_on:
      - discovery-server
      - config-server
      - notification-service
      - postgres-emp
      - postgres-auth
      - redis
      - rabbitmq
    networks:
      - microservices-net

  api-gateway:
    container_name: gateway-service
    platform: linux/amd64
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - '8222:8222'
    depends_on:
      - discovery-server
      - config-server
      - notification-service
      - auth-service
      - employee-service
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres-auth:
  postgres-emp:
  redis_data:
    driver: local
  pgadmin:
